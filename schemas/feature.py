from pydantic import BaseModel, EmailStr
from datetime import datetime

# Base class for Feature which includes the fields needed for both creating and returning features
class FeatureBase(BaseModel):
    name: str
    email: EmailStr
    feature: str
    user_id: int  # user_id will be passed from the frontend

    class Config:
        from_attributes = True  # To allow ORM mode

# Schema used for creating a new feature (input)
class FeatureCreate(FeatureBase):
    pass  # No additional fields, all fields are inherited from FeatureBase

# Schema for returning feature details (output)
class FeatureResponse(FeatureBase):
    feature_id: int  # Automatically generated by the database
    created_at: datetime  # Timestamp when the feature is created
    updated_at: datetime  # Timestamp when the feature is last updated

    class Config:
        from_attributes = True  # To allow ORM mode